version: "3.8"

services:
  # Backend service for development
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ambulance-backend-dev
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@db:5432/ambulance
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ambulance
      - JWT_SECRET=dev_secret
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev
    depends_on:
      - db
    networks:
      - ambulance-network

  # Frontend service for development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ambulance-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev -- --host
    environment:
      - VITE_API_URL=http://localhost:5001/api/v1
    depends_on:
      - backend
    networks:
      - ambulance-network

  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: ambulance-db-dev
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ambulance
    volumes:
      - pgdata-dev:/var/lib/postgresql/data
    networks:
      - ambulance-network

networks:
  ambulance-network:
    driver: bridge

volumes:
  pgdata-dev:
